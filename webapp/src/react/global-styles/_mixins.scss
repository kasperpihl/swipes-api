@import '~styles/_vars.scss/';
@import '~styles/_functions.scss/';

// if no parameters are passed, the size is inherited
@mixin size($width:null, $height:null) {
	@if $width {
		width: $width;
	} @else {
		width: inherit;
		height: inherit
	}

	@if $height {
		height: $height;
	} @else if $width {
		height: $width;
	}
}

//Pass nothing paramenters for simple centering
@mixin flex($vertical:center, $horizontal:center, $direction:row) {
	@if $vertical == flex {
		display: flex;
	} @else if $vertical == column {
		display: flex;
		flex-direction: column;
	}	@else if $vertical == none {
		flex: none;
	} @else {
		align-items: $vertical;
		display: flex;
		flex-direction: $direction;
		justify-content: $horizontal;
	}
}

@mixin svg-color($fill:$deepBlue-100, $stroke:$fill) {
	fill: $fill;
	stroke: $stroke;
}

@mixin font($fz:null, $c:null, $lh:null, $fw:null) {
	font-size: $fz;
	color: $c;
	font-weight: $fw;

	@if $lh {
		$getNum: $lh / 100;

		@if round($getNum) == $getNum {
			font-weight: $lh;
		} @else {

			@if strip-unit($lh) > 2 {
				line-height: strip-unit($lh) / strip-unit($fz);
			} @else {
				line-height: $lh;
			}
		}
	}
}

@mixin border-radius($topLeft:50%, $topRight:50%, $botLeft:50%, $botRight:50%) {
  border-top-left-radius: $topLeft;
  border-top-right-radius: $topRight;
  border-bottom-left-radius: $botLeft;
  border-bottom-right-radius: $botRight;
}

@mixin styleIfNumberOfElements($numberOfElements) {
  @if $numberOfElements == 1 {
    &:first-of-type:nth-last-of-type(1) {
    	@content;
    }
  } @else if $numberOfElements > 1 {
    &:first-of-type:nth-last-of-type(#{$numberOfElements}),
    &:first-of-type:nth-last-of-type(#{$numberOfElements}) ~ & {
    	@content;
    }
  }
}
