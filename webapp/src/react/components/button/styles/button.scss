@import '~styles/_vars.scss/';
@import '~styles/_mixins.scss/';

$bigBtn: 36px;
$smallBtn: 30px;

$btnSize: $bigBtn;
$primaryColor: $blue-100;
$mainColor: $deepBlue-60;
$borderColor: $deepBlue-10;

// ======================================================
// Block
// ======================================================

.g-button {
  $b: &;

  @include size(auto, $btnSize);
  @include widthSpecifications($btnSize, initial);
  @include flexContainer('row', center, center) {
    flex: none;
    display: inline-flex;
  };
  // background-color: $bg;
  border-radius: 50px;
  border: 1px solid;
  border-color: $borderColor;
  transition: all .15s, border-color .15s 0s;
  user-select: none;
  z-index: 2;
  overflow: hidden;
}

// ======================================================
// Elements
// ======================================================

.g-button {
  $b: &;

  &__svg {
    @include size(24px);
    @include svg-color($mainColor !important);
    transition: all .15s ease, opacity .15s .3s ease, margin .5s ease, border-color .15s 0s;
  }

  &__text {
    @include font(12px, $mainColor, 18px, 400);
    padding: 0 24px;
    pointer-events: none;
    transition: all .15s ease, opacity .15s .3s ease, margin .5s ease, border-color .15s 0s;

    &:first-letter {
      text-transform: uppercase;
    }
  }

  .material-icons {
    @include font(18px, $mainColor);
    padding-top: 2px;
    padding-left: 2px;
  }
}

// Result states

.g-button {
  $b: &;
}

// ======================================================
// Targeting
// ======================================================


// Focus and active state, not for disabled, frameless and loading

.g-button {

  &:not(&--disabled):not(&--frameless):not(&--loading):focus, {
    outline:none;
    box-shadow: 0 0 2px 1px $primaryColor;
    border: 1px solid $primaryColor;
    transition: all .15s ease, border-color .15s 0s;
  }

  &:not(&--disabled):not(&--frameless):not(&--loading):active, {
    outline:none;
    box-shadow: 0 0 2px 1px transparent;
    border: 1px solid transparent;
    transition: all .15s ease, border-color .15s 0s;
  }
}

// ======================================================
// Modifiers
// ======================================================

// Icon and text

.g-button {
  $b: &;

  &--icon-and-text {
    padding: 0 $btnSize;

    #{$b}__text {
      padding: 0 !important;
      padding-left: 6px;
    }
  }

  &:active {
    transform: scale(.93);
    transition: .2s ease;
  }
}

// Reverse for Icon and text

.g-button {
  $b: &;

  &--reverse {
    #{$b}__svg {
      order: 2;
    }

    #{$b}__text {
      order: 1;
    }
  }
}

// Primary

.g-button {
  $b: &;

  &--primary {
    $mainColor: $primaryColor;

    border-color: $mainColor;
    transition: all .15s ease, border-color .15s 0s;

    #{$b}__svg {
      @include svg-color($mainColor !important);
    }

    #{$b}__text {
      color: $mainColor;
    }
  }
}

// Small button

.g-button {
  $b: &;

  &--small {
    $btnSize: $smallBtn;

    @include size(auto, $btnSize);
    min-width: $btnSize;

    #{$b}__text {
      padding: 0 12px;
    }

    &#{$b}--icon-and-text {
      padding: 0 12px;
    }



  }
}

// disabled

.g-button {
  $b: &;

  &--disabled {
    border-color: transparent;
    background-color: transparent;

    #{$b}__text {
      color: $deepBlue-40;
      font-weight: 400;
    }

    #{$b}__svg {
      @include svg-color($deepBlue-20 !important);
    }
  }
}

// frameless

.g-button {
  $b: &;

  &--frameless {
    border: none;
  }
}

// selected states

.g-button {
  $b: &;

  &--selected:not(&--primary):not(&--disabled) {
    background-color: $borderColor;
  }

  &--primary#{&}--selected {
    $mainColor: $primaryColor;

    background-color: $mainColor;

    #{&}__text {
      @include font($c: white);
    }

    #{&}__svg {
      @include svg-color(white);
    }
  }
}

// ======================================================
// Hover
// ======================================================

// default hover

.g-button {
  $b: &;

  &:hover:not(&--primary):not(&--disabled) {
    border-color: $borderColor;
    background-color: $borderColor;

    #{$b}__svg {
      @include svg-color($mainColor !important);
    }

    #{$b}__text {
      color: $mainColor;
    }
  }
}

// Primary hover

.g-button {
  $b: &;

  &--primary:hover {
    $mainColor: $primaryColor;
    background-color: $mainColor;

    #{$b}__svg {
      @include svg-color(white !important);
    }

    #{$b}__text {
      color: white;
    }
  }
}

// Icon and text hover

.g-button {
  $b: &;

  // &--icon-and-text:hover {

  //   #{$b}__svg {
  //     transform: translateX(-6px);
  //   }

  //   #{$b}__text {
  //     transform: translateX(6px);
  //   }
  // }

  // &--reverse#{&}--icon-and-text:hover {
  //   #{$b}__svg {
  //     transform: translateX(6px);
  //   }

  //   #{$b}__text {
  //     transform: translateX(-6px);
  //   }
  // }
}

// disabled hover

.g-button {
  $b: &;

  &--disabled:hover {
    background-color: transparent !important;

    #{$b}__text {
      color: $deepBlue-40;
    }

    #{$b}__svg {
      @include svg-color($deepBlue-20 !important);
    }
  }
}

// ======================================================
// Loading
// ======================================================

.g-button {
  $b: &;

  &:before {
    content: '';
    position: absolute;
    left: 0; top: 0;
    @include size($btnSize);
    border: 0px solid $primaryColor;
    border-radius: 50%;
    border-width: 3px;
    border-color: $deepBlue-10;
    opacity: 0;
    transition: .2s ease;
  }

  &:after {
    content: '';
    position: absolute;
    left: 0; top: 0;

    @include size($smallBtn);
    border: 0px solid $primaryColor;
    border-radius: 50%;
    transform: rotate(-45deg);
    -webkit-clip-path: polygon(100% 0, 100% 50%, 50% 50%, 50% 0);
    opacity: 0;
    transition: .3s -.3s ease;
  }
  &:not(&--small):after {
    @include size($btnSize);
  }

  &--loading {
    border-width: 0px;
    border-color: $deepBlue-10;
    transition: all .3s ease, border-width .3s ease, border-color .3s .5s ease;
    pointer-events: none;

    &:hover {
      background-color: $bg;
    }

    &:before {
      opacity: 1;
      transition: .3s .5s ease;
    }
    &:after {
      content: '';
      position: absolute;
      left: 0; top: 0;
      @include size($btnSize);
      border: 3px solid $primaryColor;
      border-radius: 50%;
      transform: rotate(-45deg);
      -webkit-clip-path: polygon(100% 0, 100% 50%, 50% 50%, 50% 0);
      opacity: 1;
      transition: border-width .15s .25s ease, opacity .15s .25s ease;
      animation: rotateBtnLoader 1s .25s cubic-bezier(.56,.31,.52,.78) infinite;
    }

    #{$b}__text {
      opacity: 0;
      margin: 0 -100px;
      transition: opacity .15s ease, margin .5s ease;
    }

    #{$b}__svg {
      opacity: 0;
      transition: opacity .15s ease, margin .5s ease;
    }


  }

  &#{&}--small#{&}--loading {

    &:before {
      @include size(28px);
      left: 2px; top: 2px;
    }

    &:after {
      left: 2px; top: 2px;
      @include size($smallBtn - 2px);
    }
  }
}

@keyframes rotateBtnLoader {
  from {
    transform: rotate(-45deg);
  }

  to {
    transform: rotate(315deg);
  }
}

// ======================================================
// Result states
// ======================================================

.g-button {
  $b: &;

  &--result {
    // pointer-events: none;

    #{$b}__svg {
      display: none;
    }

    #{$b}__text {
      display: none;
    }
  }

  &--success {
    border-color: $green-color;

    &:hover {
      border-color: $green-color;
    }

    #{$b}__svg {
      @include svg-color($green-color !important);
    }

    #{$b}__text {
      @include font($c: $green-color);
    }
  }

  &--error {
    border-color: $red-80;

    &:hover {
      border-color: $red-80;
    }

    #{$b}__svg {
      @include svg-color($red-80 !important);
    }

    #{$b}__text {
      @include font($c: $red-80);
    }
  }

  &__result-state {
    @include size(100%);
    @include flexContainer('row', center, center);

    #{$b}__svg {
      margin-left: 15px;
      display: block;
    }

    #{$b}__text {
      display: block;
      padding: 0 15px;
    }
  }
}
