Resources:
  sslSecurityGroupIngress: 
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: {"Fn::GetAtt" : ["AWSEBSecurityGroup", "GroupId"]}
      IpProtocol: tcp
      ToPort: 443
      FromPort: 443
      CidrIp: 0.0.0.0/0
files:
  # Uses 000_ as a hack to load before 00_Elastic.... < Their standard one
  # Allow verification to perform the challenge
  /etc/nginx/conf.d/000_allow_LetsEncrypt_verification.conf:
    mode: "000644"
    owner: root
    group: root
    content: |
      server {
        listen 8080;
        location ~ /.well-known/  {
            root /var/www/acme-challenge/;
        }
      }
  # Main config
  /etc/nginx/conf.d/https_custom.pre:
    mode: "000644"
    owner: root
    group: root
    content: |
      # HTTPS server
      server {
        listen       443 default ssl;
        server_name  socket.wspc.io;
        error_page  497 https://$host$request_uri;
        
        ssl_certificate      /etc/letsencrypt/live/socket.wspc.io/fullchain.pem;
        ssl_certificate_key  /etc/letsencrypt/live/socket.wspc.io/privkey.pem;
        ssl_session_timeout  5m;
        ssl_protocols  TLSv1.1 TLSv1.2;
        ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
        ssl_prefer_server_ciphers   on;

        if ($ssl_protocol = "") {
          rewrite ^ https://$host$request_uri? permanent;
        }

        location / {
          proxy_pass  http://nodejs;
          proxy_set_header   Connection "";
          proxy_http_version 1.1;
          proxy_set_header        Host            $host;
          proxy_set_header        X-Real-IP       $remote_addr;
          proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header        Upgrade         $http_upgrade;
          proxy_set_header        Connection      "Upgrade";
        }
      }
  # Post init hooks https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/custom-platform-hooks.html
  "/opt/elasticbeanstalk/hooks/postinit/91_install_ssl_after.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/usr/bin/env bash
      # cleaning_config_files
      sudo rm -f /etc/nginx/conf.d/https_custom.conf && rm -f /etc/nginx/conf.d/000_http_redirect_custom.conf;
      # stop nginx
      if ( initctl status nginx | grep start ); then
        sudo initctl stop nginx
      fi
      # start it again
      sudo initctl start nginx
      # install certbot
      wget https://dl.eff.org/certbot-auto;chmod a+x certbot-auto
      # createwebrootpath
      sudo mkdir -p /var/www/acme-challenge/
      # getcertwebrootmode
      sudo ./certbot-auto certonly --debug --non-interactive --email kasper@swipesapp.com --agree-tos --authenticator webroot --webroot-path /var/www/acme-challenge -d socket.wspc.io --keep-until-expiring --installer nginx --staging
      # moving configs around
      sudo mv /etc/nginx/conf.d/000_http_redirect_custom.pre /etc/nginx/conf.d/000_http_redirect_custom.conf
      sudo mv /etc/nginx/conf.d/https_custom.pre /etc/nginx/conf.d/https_custom.conf
      # restarting nginx again
      # stop nginx
      if ( initctl status nginx | grep start ); then
        sudo initctl stop nginx
      fi
      # start it again
      sudo initctl start nginx
      
packages: 
  yum:
    epel-release: []
      
