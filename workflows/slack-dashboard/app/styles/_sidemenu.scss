$itemHeight: 26px;
$indicatorWidth: 5px;
$indicatorHeight: 0px;
$indicatorUnreadHeight: 1px;

$color: #d0d4d9;
$hoverColor: #a0a4a9;
$unreadColor: #F44336;

$activeColor: #1581e2;

$notificationHeight: 18px;
$expandedWidth: 210px;
$minWidth: 40px;

$returnDelay: .2s;
$pushDelay: .1s;

.swipes-sidemenu {
	position: absolute;
	width:$expandedWidth;
	height:100%;
	background:white;
	overflow: hidden;
	top:0;
	left:0;
	z-index: 9999;
	transform: translateX( - ($expandedWidth -  $minWidth) );
	transition: 0.1s ease-in;
	transition-delay: $returnDelay;

	.relative-wrapper{
		height:100%;
		width:100%;
		position:relative;
	}
	.scroller{
		width:100%;
		height:100%;
		overflow: hidden;

		h3 {
			opacity: 0;
			font-size: 12px;
			text-transform: uppercase;
			padding: 10px 20px;
			letter-spacing: .5px;
			transition: .1s;
			transition-delay: $returnDelay;
		}
	}
	.content-container{
		height:100%;
	}
	/*
		K_TODO: Remove this and make a delegate method on sidemenu instead.
	 */
	/*&.pinned + .chat-list-container {
		width: calc(100% - 180px);
		transform: translateX(180px);
		transition: 0.3s ease-in;
		transition-delay: .1s;
	}*/
	&:hover:not(.force-close), &.pinned {
		.scroller{
			overflow-y: auto;
		}
		border-right: 1px solid #eee;
		transform: translateX(0);
		transition: 0.1s ease-in;
		transition-delay: 0.05s;

		h3 {
			opacity: 1;
		}

		.menu-item{
			&.active{
				background: #ecf1f6;
			}
			.indicator{
				opacity: 0;
			}
			.name{
				opacity: 1;
			}
		}
	}
	.menu-item{
		height:$itemHeight;
		position: relative;
		.indicator{
			position: absolute;
			left: $expandedWidth - $minWidth;
			top:50%;
			margin-top: - $indicatorUnreadHeight / 2;
			background: $color;
			width: $indicatorWidth;
			height: $indicatorHeight;
			transition-delay: $returnDelay;
		}
		.indicator.even {
			animation: indicator-glow-even 1.5s 1;
		}
		.indicator.odd {
			animation: indicator-glow 1.5s 1;
		}
		.notification{
			position: absolute;
			height: $notificationHeight;
			width: $notificationHeight;
			border-radius: $notificationHeight/2;
			text-align: center;
			top: ($itemHeight - $notificationHeight) / 2;
			right: 14px;
			font-weight: 400;
			border: 1px solid $hoverColor;
			color: $hoverColor;
			line-height: 16px;
			font-size: 9px;
		}
		.notification.even {
			animation: notification-glow-even 1.5s 1;
		}
		.notification.odd {
			animation: notification-glow 1.5s 1;
		}
		.name{
			width: $expandedWidth - $notificationHeight - 10px;
			opacity: 0;
			padding-left: 30px;
			white-space: nowrap;
			text-overflow: ellipsis;
			overflow: hidden;
			color: #333D59;
			line-height: 25px;
			font-size: 14px;
			font-weight: 400;
			cursor: default;
			transition-delay: $returnDelay;
			/*
				K_TODO: Rewrite this to be a generic icon that can be added from local_sidemenu somehow.
			 */
			&.presence {

				&:after {
					content: "";
					position: absolute;
					/* right: 2px; */
					left: 12px;
					width: 6px;
					height: 6px;
					background-color: $studioGray-60;
					border-radius: 50%;
					top: 50%;
					transform: translateY(-50%);
				}

				&.active {
					&:after {
						content: "";
						position: absolute;
						/* right: 2px; */
						left: 12px;
						width: 6px;
						height: 6px;
						background-color: #3ed37d;
						border-radius: 50%;
						top: 50%;
						transform: translateY(-50%);
					}
				}
			}
		}
		&:hover{
			background: #efefef;
			color: #000923;
		}
		&.unread{
			.name{
				font-weight: 500;
				color: $deepBlue-100;
			}
			.indicator{
				background: $hoverColor;
				border-bottom-right-radius: 1px;
				border-top-right-radius: 1px;
				width: $indicatorWidth + 4px;
				height: $indicatorUnreadHeight;
			}
		}
	}
}
@keyframes indicator-glow {
	15%, 90%  {
		background: $unreadColor;
	}
}

@keyframes indicator-glow-even {
	15%, 90%  {
		background: $unreadColor;
	}
}


@keyframes notification-glow {
	15%, 90%  {
		background: $unreadColor;
		border: 1px solid $unreadColor;
		color: white;
	}
}

@keyframes notification-glow-even {
	15%, 90%  {
		background: $unreadColor;
		border: 1px solid $unreadColor;
		color: white;
	}
}
